#!/bin/bash
# ctldb

# Stop on errors
set -Eeuo pipefail
set -x

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|modify|destroy|reset|dump|pokemon|coaches|matches)"
}


if [ $# -ne 1 ]; then
  usage
  exit 1
fi


# Parse argument.  $1 is the first argument
case $1 in
  "create")
    # check if the database already exists
    if [ -f var/CTLDL_Bot.sqlite3 ]; then
      echo "Error: database already exists"
      exit 1
    fi
    # Create the database
    sqlite3 var/CTLDL_Bot.sqlite3 < sql/schema.sql
    sqlite3 var/CTLDL_Bot.sqlite3 < sql/data.sql
    ;;


  "modify")
    # Modify the database
    sqlite3 var/CTLDL_Bot.sqlite3 < sql/change.sql
    ;;


  "destroy")
    # Destroy the database
    rm -rf var/CTLDL_Bot.sqlite3 
    ;;


  "reset")
    # Destroy the database
    rm -rf var/CTLDL_Bot.sqlite3 
    # Create the database
    sqlite3 var/CTLDL_Bot.sqlite3 < sql/schema.sql
    sqlite3 var/CTLDL_Bot.sqlite3 < sql/data.sql
    ;;

  "dump")
    sqlite3 -batch -line var/CTLDL_Bot.sqlite3 'SELECT * FROM coaches'
    sqlite3 -batch -line var/CTLDL_Bot.sqlite3 'SELECT * FROM pokemon'
    sqlite3 -batch -line var/CTLDL_Bot.sqlite3 'SELECT * FROM schedule'
    ;;

  "pokemon")
    sqlite3 -batch -line var/CTLDL_Bot.sqlite3 'SELECT * FROM pokemon'
    ;;

  "trades")
    sqlite3 -batch -line var/CTLDL_Bot.sqlite3 'SELECT * FROM trades'
    ;;

  "coaches")
    sqlite3 -batch -line var/CTLDL_Bot.sqlite3 'SELECT * FROM coaches'
    ;;

  "matches")
    sqlite3 -batch -line var/CTLDL_Bot.sqlite3 'SELECT * FROM matches'
    ;;
  *)
    usage
    exit 1
    ;;
esac
